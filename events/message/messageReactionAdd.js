const serverProfile = require('../../config/serverProfile');
const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
module.exports = {
  name: 'messageReactionAdd',
  /**
   * Message Reaction Add Event
   * @param {MessageReaction} reaction - Message Reaction object
   * @param {User} user - User object
   */
  async execute(reaction, user) {
    try {
      // B·ªè qua n·∫øu l√† bot
      if (user.bot) return;

      const { message } = reaction;
      if (!message.guildId) return;

      // L·∫•y c·∫•u h√¨nh server
      const profile = await serverProfile.findOne({ guildID: message.guildId }).catch(() => {});
      if (!profile || !profile.starboardChannel || !profile.starCount || profile.starCount <= 0) return;

      // Ch·ªâ x·ª≠ l√Ω emoji "‚≠ê"
      if (reaction.emoji.name !== '‚≠ê') return;

      // ƒê·∫øm s·ªë l∆∞·ª£ng reaction "‚≠ê" tr√™n message
      const starReaction = message.reactions.cache.get('‚≠ê');
      const count = starReaction ? starReaction.count : 0;

      // ƒê·ªß s·ªë l∆∞·ª£ng starCount m·ªõi g·ª≠i
      if (count < profile.starCount) return;

      // Kh√¥ng cho t·ª± star ch√≠nh m√¨nh
      if (message.author.id === user.id) return;

      // L·∫•y channel starboard
      const guild = message.guild;
      const starboardChannel = guild.channels.cache.get(profile.starboardChannel);
      if (!starboardChannel) return;

      // N·∫øu c√≥ attachment th√¨ b·ªè qua
      if (message.attachments && message.attachments.size > 0) return;

      // Jump link button
      const jumpButton = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setLabel('üîóGo to message').setStyle(ButtonStyle.Link).setURL(message.url),
      );

      // Chu·∫©n b·ªã embeds n·∫øu c√≥
      let embeds = [];
      if (message.embeds && message.embeds.length > 0) {
        embeds = message.embeds.map((embed) =>
          EmbedBuilder.from(embed).setFooter({
            text: message.guild.name,
            iconURL: message.guild.iconURL(true),
          }),
        );
      }

      // N·∫øu l√† message th∆∞·ªùng (ch·ªâ c√≥ content)
      if (embeds.length === 0 && message.content) {
        embeds = [
          new EmbedBuilder()
            .setColor('Random')
            .setAuthor({
              name: message.member?.displayName || message.author.username,
              iconURL: message.author.displayAvatarURL(true),
            })
            .setDescription(message.content)
            .setFooter({
              text: message.guild.name,
              iconURL: message.guild.iconURL(true),
            })
            .setTimestamp(),
        ];
      }

      // N·∫øu c√≥ content ho·∫∑c embed
      if (embeds.length > 0) {
        if (!profile.starboardMessages) profile.starboardMessages = {};

        const starboardData = profile.starboardMessages[message.id];
        const now = Date.now();

        if (starboardData && starboardData.id) {
          // ƒê√£ c√≥ message tr√™n starboard, lu√¥n update s·ªë star v√† embed ngay l·∫≠p t·ª©c
          const sentMsg = await starboardChannel.messages.fetch(starboardData.id).catch(() => null);
          if (sentMsg) {
            await sentMsg.edit({
              content: `**${count}** \\‚≠ê in <#${message.channel.id}>:`,
              embeds: embeds,
              components: [jumpButton],
            });
            // C·∫≠p nh·∫≠t l·∫°i th·ªùi gian cu·ªëi c√πng update (kh√¥ng c·∫ßn thi·∫øt cho cooldown, nh∆∞ng c√≥ th·ªÉ l∆∞u ƒë·ªÉ log)
            profile.starboardMessages[message.id].lastTime = now;
            await profile.save();
          } else {
            // N·∫øu kh√¥ng fetch ƒë∆∞·ª£c (b·ªã xo√°), cho ph√©p g·ª≠i m·ªõi n·∫øu qua cooldown
            if (!starboardData.lastTime || now - starboardData.lastTime >= 300000) {
              const newMsg = await starboardChannel.send({
                content: `**${count}** \\‚≠ê in <#${message.channel.id}>:`,
                embeds: embeds,
                components: [jumpButton],
              });
              profile.starboardMessages[message.id] = { id: newMsg.id, lastTime: now };
              await profile.save();
            }
          }
        } else {
          // Ch∆∞a c√≥, ch·ªâ g·ª≠i m·ªõi n·∫øu ƒë·ªß cooldown
          if (!starboardData || !starboardData.lastTime || now - starboardData.lastTime >= 300000) {
            const newMsg = await starboardChannel.send({
              content: `**${count}** \\‚≠ê in <#${message.channel.id}>:`,
              embeds: embeds,
              components: [jumpButton],
            });
            profile.starboardMessages[message.id] = { id: newMsg.id, lastTime: now };
            await profile.save();
          }
        }
      }
    } catch (e) {
      console.error(chalk.red('Error in messageReactionAdd:'), e);
    }
  },
};
