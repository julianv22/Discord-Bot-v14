const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, Message, Client, ButtonStyle } = require('discord.js');
module.exports = {
  name: 'help',
  aliases: ['h'],
  description: '`ƒê·ªçc k·ªπ h∆∞·ªõng d·∫´n SD tr∆∞·ªõc khi d√πng!`',
  category: 'help',
  cooldown: 0,
  /**
   * @param {Message} message - ƒê·ªëi t∆∞·ª£ng message
   * @param {Array} args - M·∫£ng c√°c argument
   * @param {Client} client - ƒê·ªëi t∆∞·ª£ng client
   */
  async execute(message, args, client) {
    const { cmdGuide, prefixCommands, listCommands } = client;
    const { author: user, member, guild } = message;
    const { commands, count: cmdcount } = listCommands(prefixCommands, member);

    if (args.join(' ').trim() === '?')
      return cmdGuide(
        message,
        this.name,
        `S·ª≠ d·ª•ng \`${
          prefix + this.name
        }\` ƒë·ªÉ xem danh s√°ch c√°c command\n\n\`${prefix}[t√™n command] ?\` ƒë·ªÉ xen h∆∞·ªõng d·∫´n chi ti·∫øt c·ªßa command ƒë√≥\n\n‚§∑${
          this.description
        }`,
      );

    const buttons = [
      { customId: 'support-btn:youtube', label: 'üé¨ YouTube', style: ButtonStyle.Danger },
      { customId: 'support-btn:server', label: cfg.supportServer, style: ButtonStyle.Primary },
      { url: cfg.inviteLink, label: 'üîó Invite Me', style: ButtonStyle.Link },
      { url: 'https://top.gg/servers/954736697453731850/vote', label: 'üëç Vote!', style: ButtonStyle.Link },
    ];

    const embed = new EmbedBuilder()
      .setAuthor({ name: guild.name, iconURL: guild.iconURL(true) })
      .setTitle(`Danh s√°ch Prefix Command (${prefix})`)
      .setDescription(`N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, h√£y tham gia m√°y ch·ªß h·ªó tr·ª£: [\`${cfg.supportServer}\`](${cfg.supportLink})`)
      .setColor('Random')
      .setThumbnail(cfg.helpPNG)
      .addFields([
        {
          name: `T·ªïng s·ªë command: [${cmdcount}]`,
          value: `Command prefix: \`${prefix}\``,
        },
      ])
      .addFields(commands)
      .addFields([
        {
          name: `\u200b`,
          value: `\`${prefix}<command> ?\` ƒë·ªÉ xem h∆∞·ªõng d·∫´n chi ti·∫øt c·ªßa command`,
        },
      ])
      .setFooter({
        text: `Requested by ${user.displayName || user.username}`,
        iconURL: user.displayAvatarURL(),
      })
      .setTimestamp();

    message.delete().then(() =>
      message.channel.send({
        embeds: [embed],
        components: [
          new ActionRowBuilder().addComponents(
            buttons.map((data) => {
              const button = new ButtonBuilder().setLabel(data.label).setStyle(data.style);
              if (data.customId) button.setCustomId(data.customId);
              if (data.url) button.setURL(data.url);
              return button;
            }),
          ),
        ],
      }),
    );
  },
};
