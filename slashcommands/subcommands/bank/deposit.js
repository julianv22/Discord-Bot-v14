const { Client, Interaction, SlashCommandSubcommandBuilder, EmbedBuilder, Colors } = require('discord.js');
const economyProfile = require('../../../config/economyProfile');

module.exports = {
  category: 'sub command',
  scooldown: 0,
  parent: 'bank',
  data: new SlashCommandSubcommandBuilder().setName('deposit'),
  /** - Deposit money into your bank account.
   * @param {Interaction} interaction - Command Interaction
   * @param {Client} client - Discord Client */
  async execute(interaction, client) {
    const { guildId, user, options } = interaction;
    const { messageEmbed, user: bot } = client;
    const userId = user.id;
    const amount = options.getInteger('amount');

    if (amount <= 0) return await interaction.reply(messageEmbed({ desc: 'S·ªë üí≤ g·ª≠i ph·∫£i l·ªõn h∆°n 0!' }));

    const profile = await economyProfile.findOne({ guildId, userId }).catch(console.error);
    if (!profile)
      return await interaction.reply(
        messageEmbed({ title: 'B·∫°n ch∆∞a c√≥ t√†i kho·∫£n Economy!', desc: '‚û° S·ª≠ d·ª•ng `daily` ƒë·ªÉ kh·ªüi nghi·ªáp üòÅ' })
      );

    if (amount > profile?.balance)
      return await interaction.reply(
        messageEmbed({
          title: 'S·ªë üí≤ g·ª≠i kh√¥ng ƒë∆∞·ª£c l·ªõn h∆°n s·ªë ti·ªÅn hi·ªán c√≥!',
          desc: '‚û° S·ª≠ d·ª•ng /balance ƒë·ªÉ ki·ªÉm tra s·ªë üí≤ hi·ªán c√≥',
        })
      );

    profile.balance -= amount;
    profile.bank += amount;
    await profile.save().catch(console.error);

    const embeds = [
      new EmbedBuilder()
        .setColor(Colors.DarkGreen)
        .setThumbnail(cfg.coin_gif)
        .setAuthor({
          name: user.displayName || user.username,
          iconURL: cfg.money_wings_gif,
        })
        .setTitle('\\üè¶ Deposit')
        .setDescription(`\\‚úÖ G·ª≠i ${amount.toCurrency()} v√†o ng√¢n h√†ng th√†nh c√¥ng!\n\n**S·ªë d∆∞ hi·ªán c√≥:**`)
        .setFooter({ text: 'R·∫•t h√¢n h·∫°n ƒë∆∞·ª£c ph·ª•c v·ª• b·∫°n!', iconURL: bot.displayAvatarURL(true) })
        .setTimestamp()
        .setFields(
          {
            name: '\\üí∞ Balance',
            value: profile?.balance.toCurrency(),
            inline: true,
          },
          {
            name: '\\üè¶ Bank',
            value: profile?.bank.toCurrency(),
            inline: true,
          }
        ),
    ];

    return await interaction.reply({ embeds, flags: 64 });
  },
};
