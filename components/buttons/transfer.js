const { Client, Interaction, EmbedBuilder, Colors } = require('discord.js');
const economyProfile = require('../../config/economyProfile');

module.exports = {
  type: 'buttons',
  data: { name: 'transfer' },
  /** - Transfer Money Button
   * @param {Interaction} interaction - Button Interaction
   * @param {Client} client - Discord Client */
  async execute(interaction, client) {
    const { guild, guildId, user, customId } = interaction;
    const { messageEmbed } = client;
    // T√°ch customId l·∫•y amount, fee, targetId
    const [, amountStr, feeStr, targetId] = customId.split(':');

    if (amountStr === 'cancel')
      return interaction.update({ ...messageEmbed({ desc: 'Hu·ª∑ giao d·ªãch' }), components: [] });

    const amount = parseInt(amountStr, 10);
    const fee = parseInt(feeStr, 10);
    const total = amount + fee;

    // L·∫•y profile c·ªßa ng∆∞·ªùi chuy·ªÉn v√† ng∆∞·ªùi nh·∫≠n
    const [profile, targetProfile] = await Promise.all([
      economyProfile.findOne({ guildId, userId: user.id }).catch(console.error),
      economyProfile.findOne({ guildId, userId: targetId }).catch(console.error),
    ]);

    // Ki·ªÉm tra l·∫°i d·ªØ li·ªáu
    if (!profile || !targetProfile)
      return await interaction.update({
        ...messageEmbed({
          desc: !profile
            ? 'Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n c·ªßa b·∫°n trong c∆° s·ªü d·ªØ li·ªáu!'
            : 'Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n c·ªßa ng∆∞·ªùi nh·∫≠n trong c∆° s·ªü d·ªØ li·ªáu!',
        }),
        components: [],
      });

    if (profile?.bank < total)
      return await interaction.update({
        ...messageEmbed({
          desc: `B·∫°n kh√¥ng c√≥ ƒë·ªß üí≤ ƒë·ªÉ chuy·ªÉn! S·ªë d∆∞ ng√¢n h√†ng c·ªßa b·∫°n: ${profile?.bank.toCurrency()}`,
        }),
        components: [],
      });

    // Tr·ª´ ti·ªÅn ng∆∞·ªùi chuy·ªÉn, c·ªông ti·ªÅn ng∆∞·ªùi nh·∫≠n
    profile.bank -= total;
    targetProfile.bank += amount;

    await profile.save().catch(console.error);
    await targetProfile.save().catch(console.error);

    // T·∫°o embed th√¥ng b√°o cho ng∆∞·ªùi chuy·ªÉn
    const embedSender = new EmbedBuilder()
      .setColor(Colors.DarkGreen)
      .setThumbnail(cfg.coin_gif)
      .setAuthor({ name: guild.name, iconURL: cfg.money_wings_gif })
      .setTitle('\\‚úÖ Chuy·ªÉn ti·ªÅn th√†nh c√¥ng!')
      .setDescription(
        `\\‚ôªÔ∏è B·∫°n ƒë√£ chuy·ªÉn **${amount.toCurrency()}** cho <@${targetId}>.\n\n\\üíµ Ph√≠ giao d·ªãch: **${fee.toCurrency()}**\n\n\\üí∏ T·ªïng tr·ª´: **${total.toCurrency()}**\n\n\\üè¶ S·ªë d∆∞ c√≤n l·∫°i: **${profile?.bank.toCurrency()}**`
      )
      .setFooter({ text: `Requested by ${user.displayName || user.username}`, iconURL: user.displayAvatarURL(true) })
      .setTimestamp();

    // T·∫°o embed th√¥ng b√°o cho ng∆∞·ªùi nh·∫≠n
    const embedReceiver = new EmbedBuilder()
      .setColor(Colors.DarkGreen)
      .setThumbnail(cfg.coin_gif)
      .setAuthor({ name: guild.name, iconURL: cfg.money_wings_gif })
      .setTitle('B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ti·ªÅn!')
      .setDescription(
        `B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c **${amount.toCurrency()}** t·ª´ <@${user.id}> trong guild ${
          guild.name
        }.\n\n\\üè¶ S·ªë d∆∞ m·ªõi: **${targetProfile?.bank.toCurrency()}**`
      )
      .setTimestamp()
      .setFooter({
        text: client.user.displayName || client.user.username,
        iconURL: client.user.displayAvatarURL(true),
      });

    // G·ª≠i th√¥ng b√°o cho ng∆∞·ªùi nh·∫≠n (n·∫øu c√≥ th·ªÉ)
    try {
      const member = await guild.members.fetch(targetId);
      await member.send({ embeds: [embedReceiver] });
    } catch (e) {
      await client.catchError(interaction, e, 'L·ªói khi g·ª≠i tin nh·∫Øn cho ng∆∞·ªùi nh·∫≠n');
    }

    // C·∫≠p nh·∫≠t l·∫°i interaction cho ng∆∞·ªùi chuy·ªÉn
    return await interaction.update({ embeds: [embedSender], components: [] });
  },
};
