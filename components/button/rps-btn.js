const { Client, Interaction, EmbedBuilder } = require('discord.js');
const economyProfile = require('../../config/economyProfile');
const { rpsGame } = require('../../functions/common/games');
module.exports = {
  data: { name: 'rps-btn' },
  /**
   * RPS Game
   * @param {Interaction} interaction - Interaction object
   * @param {Client} client - Client object
   */
  async execute(interaction, client) {
    const { errorEmbed } = client;
    const { user, guild, customId } = interaction;
    const [, button, betStr] = customId.split(':');
    const bet = parseInt(betStr, 10);
    const userMove = parseInt(button, 10);
    const profile = await economyProfile.findOne({ guildID: guild.id, userID: user.id }).catch(() => {});
    // Ki·ªÉm tra t√†i kho·∫£n Economy
    if (!profile) return await interaction.update(errorEmbed(true, 'B·∫°n ch∆∞a c√≥ t√†i kho·∫£n Economy!'));
    // Reset count n·∫øu sang ng√†y m·ªõi
    const today = new Date();
    const lastPlay = profile.lastPlayRPS ? new Date(profile.lastPlayRPS) : null;
    const isNewDay = !lastPlay || today.toDateString() !== lastPlay.toDateString();
    if (isNewDay) {
      profile.rpsCount = 0;
      profile.lastPlayRPS = today;
    }
    // Ki·ªÉm tra s·ªë l·∫ßn ch∆°i trong ng√†y
    if (profile.rpsCount >= 50)
      return await interaction.update({
        embeds: [
          {
            color: 16711680,
            description: `\\‚ùå | B·∫°n ƒë√£ ch∆°i h·∫øt 50 l·∫ßn trong ng√†y!`,
          },
        ],
        components: [],
      });
    // Ki·ªÉm tra ti·ªÅn c∆∞·ª£c
    if (profile.balance < bet) {
      return await interaction.update(
        errorEmbed(true, `B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c! S·ªë d∆∞: ${profile.balance.toLocaleString()}\\üí≤`),
      );
    }

    try {
      // T√≠nh k·∫øt qu·∫£
      const rps = rpsGame(userMove, profile, bet);
      // TƒÉng s·ªë l·∫ßn ch∆°i v√† c·∫≠p nh·∫≠t ng√†y
      profile.rpsCount += 1;
      profile.lastPlayRPS = today;
      // T·∫°o embed th√¥ng b√°o k·∫øt qu·∫£
      const embed = new EmbedBuilder()
        .setAuthor({
          name: `Hi, ${user.displayName || user.username}`,
          iconURL: user.displayAvatarURL(true),
        })
        .setColor(rps.color)
        .setThumbnail(user.displayAvatarURL(true))
        .setTimestamp()
        .setTitle('You ' + rps.result)
        .setDescription(
          `${rps.description}\n\n${rpsConfig.Functions[rps.res]()}\nS·ªë l·∫ßn ch∆°i h√¥m nay: **${
            profile.rpsCount
          }/50**\nS·ªë d∆∞: **${profile.balance.toLocaleString()}\\üí≤**`,
        )
        .addFields([
          {
            name: `\\üí∞ T·ªïng ti·ªÅn ƒë√£ nh·∫≠n`,
            value: `${profile.totalEarned?.toLocaleString() || 0}\\üí≤`,
            inline: true,
          },
          {
            name: `\\üí∏ T·ªïng ti·ªÅn ƒë√£ chi`,
            value: `${profile.totalSpent?.toLocaleString() || 0}\\üí≤`,
            inline: true,
          },
        ]);
      // C·∫≠p nh·∫≠t t√†i kho·∫£n
      await profile.save().catch(() => {});
      // Tr·∫£ v·ªÅ k·∫øt qu·∫£
      return await interaction.update({ embeds: [embed] });
    } catch (e) {
      console.error('Error while running rpsGame', e);
      return await interaction.update(errorEmbed(true, 'ƒê√£ x·∫£y ra l·ªói khi ch∆°i game!'));
    }
  },
};
